#!/usr/bin/env ruby
# coding: utf-8
require 'rubygems'
require 'awesome_print'
require 'colorize'
require 'rest_client'
require 'json'
require 'prompt'
require 'poke-api'
require 'capybara'
require 'capybara/dsl'
require 'capybara/poltergeist'
require 'pokeman'
require 'tty-prompt'
require 'tty'

class PokeMan_exec 

  attr_accessor :history_file, :config, :config , :players, :current_player, :current_place 

  def initialize(options = {})
    PokeUtil.new
    @current_player = 'NoUser'
    @current_place  = 'NoPlace'
    PokeUtil.read_config
    console_start
  end

  def console_start
    extend Prompt::DSL

    group "Pokeman console commands"

    desc "Logon to valid players are: [#{ (PokeUtil.get_variable 'players').join(' ')}]." 
    command "logon :param" do |param|
      player  = param.split('/')
      players = PokeUtil.get_variable 'players'
      places  = PokeUtil.get_variable 'places'
      place   = PokeUtil.get_variable 'place'
      config  = PokeUtil.get_variable 'config'
      if player.size == 1
        current_place = place
      else
        current_place = player.last
      end
      unless places.include? current_place
        PokeUtil.place_error current_place, places
        status = false
      else
        status = true
      end
      unless players.include? player.first
        PokeUtil.player_error player.first, players
        status = false
      else
        current_player = player.first
        status = true
      end
      if status
        PokeUtil.login current_player, current_place
        Prompt.application.prompt = "pokeman #{current_player}/#{current_place}> ".light_green
      end
    end





    desc "Show all information about [player|pokes]."
    command "show" do ||
      prompt = TTY::Prompt.new
      option = %w(player pokemons items pokedex candys stats stats2 stats3)
      choice = prompt.select('Choose?', option)
      case choice
      when 'player'
        player = PokeUtil.get_variable 'player'
        ap player
      when 'pokemons'
        pokemons = PokeUtil.get_variable 'pokemons'
        ap pokemons
      when 'items'
        items = PokeUtil.get_variable 'items'
        ap items
      when 'pokedex'
        pokedex = PokeUtil.get_variable 'pokedex'
        ap pokedex
      when 'candys'
        candys = PokeUtil.get_variable 'candys'
        ap candys
      when 'stats'
        PokeUtil.show_stats
      when 'stats2'
        PokeUtil.show_stats2
      when 'stats3'
        PokeUtil.show_stats3
      end
    end

    desc "Show and analize config data."
    command "config" do ||
      ap config 
    end

    desc "history"
    command "history" do
      File.open(@history_file, 'r') do |f|
        while line = f.gets
          puts line
        end
      end
    end

    Prompt.application.prompt = "pokeman #{current_player}/#{current_place}> ".light_red
    @history_file = File.join(File.expand_path(File.dirname(__FILE__)).to_s, ".pokeman-history")
    Prompt::Console.start @history_file

  end

end

poke = PokeMan_exec.new
